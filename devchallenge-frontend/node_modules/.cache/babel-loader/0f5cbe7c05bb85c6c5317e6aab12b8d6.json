{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axois from 'axois';\n\nconst useForm = (callback, validate) => {\n  _s();\n\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [callback, errors, isSubmitting]);\n\n  const handleSubmit = event => {\n    if (event) event.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n    const loginFormData = new FormData();\n    loginFormData.append(\"limit\", values.limit);\n\n    try {\n      // make axios post request\n      const response = axios({\n        method: \"get\",\n        url: \"https://localhost:3000/\",\n        data: loginFormData,\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChange = event => {\n    event.persist();\n    setValues(values => ({ ...values,\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors\n  };\n};\n\n_s(useForm, \"fN8x5Yp0b2dZEBXkEth9Ky/Ylmk=\");\n\nexport default useForm;","map":{"version":3,"sources":["C:/Users/jules/devchallenge/devchallenge-frontend/src/useForm.js"],"names":["useState","useEffect","axois","useForm","callback","validate","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","Object","keys","length","handleSubmit","event","preventDefault","loginFormData","FormData","append","limit","response","axios","method","url","data","headers","error","console","log","handleChange","persist","target","name","value"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAAA;;AAEpC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,KAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,MAAM,CAACC,IAAP,CAAYL,MAAZ,EAAoBM,MAApB,KAA+B,CAA/B,IAAoCJ,YAAxC,EAAsD;AACpDN,MAAAA,QAAQ;AACT;AACF,GAJQ,EAIN,CAACA,QAAD,EAAWI,MAAX,EAAmBE,YAAnB,CAJM,CAAT;;AAMA,QAAMK,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAIA,KAAJ,EAAWA,KAAK,CAACC,cAAN;AACXR,IAAAA,SAAS,CAACJ,QAAQ,CAACC,MAAD,CAAT,CAAT;AACAK,IAAAA,eAAe,CAAC,IAAD,CAAf;AACA,UAAMO,aAAa,GAAG,IAAIC,QAAJ,EAAtB;AACAD,IAAAA,aAAa,CAACE,MAAd,CAAqB,OAArB,EAA8Bd,MAAM,CAACe,KAArC;;AACA,QAAI;AACF;AACA,YAAMC,QAAQ,GAAGC,KAAK,CAAC;AACrBC,QAAAA,MAAM,EAAE,KADa;AAErBC,QAAAA,GAAG,EAAE,yBAFgB;AAGrBC,QAAAA,IAAI,EAAER,aAHe;AAIrBS,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB;AAJY,OAAD,CAAtB;AAMD,KARD,CAQE,OAAMC,KAAN,EAAa;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAjBD;;AAmBA,QAAMG,YAAY,GAAIf,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACgB,OAAN;AACAzB,IAAAA,SAAS,CAACD,MAAM,KAAK,EAAE,GAAGA,MAAL;AAAa,OAACU,KAAK,CAACiB,MAAN,CAAaC,IAAd,GAAqBlB,KAAK,CAACiB,MAAN,CAAaE;AAA/C,KAAL,CAAP,CAAT;AACD,GAHD;;AAKA,SAAO;AACLJ,IAAAA,YADK;AAELhB,IAAAA,YAFK;AAGLT,IAAAA,MAHK;AAILE,IAAAA;AAJK,GAAP;AAMD,CA1CH;;GAAML,O;;AA4CJ,eAAeA,OAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axois from 'axois';\r\n\r\nconst useForm = (callback, validate) => {\r\n\r\n    const [values, setValues] = useState({});\r\n    const [errors, setErrors] = useState({});\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n  \r\n    useEffect(() => {\r\n      if (Object.keys(errors).length === 0 && isSubmitting) {\r\n        callback();\r\n      }\r\n    }, [callback, errors, isSubmitting]);\r\n  \r\n    const handleSubmit = (event) => {\r\n      if (event) event.preventDefault();\r\n      setErrors(validate(values));\r\n      setIsSubmitting(true);\r\n      const loginFormData = new FormData();\r\n      loginFormData.append(\"limit\", values.limit)\r\n      try {\r\n        // make axios post request\r\n        const response = axios({\r\n          method: \"get\",\r\n          url: \"https://localhost:3000/\",\r\n          data: loginFormData,\r\n          headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        });\r\n      } catch(error) {\r\n        console.log(error)\r\n      }\r\n    };\r\n  \r\n    const handleChange = (event) => {\r\n      event.persist();\r\n      setValues(values => ({ ...values, [event.target.name]: event.target.value }));\r\n    };\r\n  \r\n    return {\r\n      handleChange,\r\n      handleSubmit,\r\n      values,\r\n      errors,\r\n    }\r\n  };\r\n  \r\n  export default useForm;"]},"metadata":{},"sourceType":"module"}