{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jules\\\\devchallenge\\\\devchallenge-frontend\\\\src\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport validate from './Validation';\nimport useForm from './useForm';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst basePath = 'http://localhost:3000/api/';\n\nconst Form = () => {\n  _s();\n\n  const {\n    values,\n    errors,\n    handleChange,\n    handleSubmit\n  } = useForm(getMedianLimit, validate);\n\n  const onSubmit = data => console.log(data);\n\n  function getMedianLimit() {}\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    noValidate: true,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Enter a numerical value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          autoComplete: \"off\",\n          className: `input ${errors.limit && 'is-danger'}`,\n          \"aria-invalid\": errors.name ? \"true\" : \"false\",\n          name: \"limit\",\n          onChange: handleChange,\n          value: values.email || '',\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this), errors.limit && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"help danger\",\n          children: errors.limit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"Yilricj+Aaa9hUyMWVL5AYFIMPA=\", false, function () {\n  return [useForm];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/jules/devchallenge/devchallenge-frontend/src/Form.js"],"names":["React","validate","useForm","basePath","Form","values","errors","handleChange","handleSubmit","getMedianLimit","onSubmit","data","console","log","limit","name","email"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,WAAP;;AAEA,MAAMC,QAAQ,GAAG,4BAAjB;;AAGA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA;AAJI,MAKFN,OAAO,CAACO,cAAD,EAAiBR,QAAjB,CALX;;AAOA,QAAMS,QAAQ,GAAIC,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAA3B;;AAEA,WAASF,cAAT,GAA0B,CAEzB;;AAED,sBACE;AAAM,IAAA,QAAQ,EAAED,YAAY,CAACE,QAAD,CAA5B;AAAwC,IAAA,UAAU,MAAlD;AAAA,2BACA;AAAK,MAAA,EAAE,EAAC,MAAR;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACE;AACI,UAAA,YAAY,EAAC,KADjB;AACuB,UAAA,SAAS,EAAG,SAAQJ,MAAM,CAACQ,KAAP,IAAgB,WAAY,EADvE;AAEI,0BAAcR,MAAM,CAACS,IAAP,GAAc,MAAd,GAAuB,OAFzC;AAGI,UAAA,IAAI,EAAC,OAHT;AAGiB,UAAA,QAAQ,EAAER,YAH3B;AAGyC,UAAA,KAAK,EAAEF,MAAM,CAACW,KAAP,IAAgB,EAHhE;AAGoE,UAAA,QAAQ;AAH5E;AAAA;AAAA;AAAA;AAAA,gBADF,EAMMV,MAAM,CAACQ,KAAP,iBACC;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA,oBAA4BR,MAAM,CAACQ;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAPP;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAaE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAjCD;;GAAMV,I;UAMAF,O;;;KANAE,I;AAoCN,eAAeA,IAAf","sourcesContent":["import React from 'react';\r\nimport validate from './Validation'; \r\nimport useForm from './useForm';\r\nimport './App.css';\r\n\r\nconst basePath = 'http://localhost:3000/api/'\r\n\r\n\r\nconst Form = () => {\r\n  const {\r\n    values,\r\n    errors,\r\n    handleChange,\r\n    handleSubmit,\r\n  } = useForm(getMedianLimit, validate);\r\n\r\n  const onSubmit = (data) => console.log(data);\r\n\r\n  function getMedianLimit() { \r\n     \r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)} noValidate>\r\n    <div id=\"main\">\r\n      <label className=\"label\">Enter a numerical value</label>\r\n      <div className=\"control\">\r\n        <input \r\n            autoComplete=\"off\" className={`input ${errors.limit && 'is-danger'}`}\r\n            aria-invalid={errors.name ? \"true\" : \"false\"}\r\n            name=\"limit\" onChange={handleChange} value={values.email || ''} required />\r\n        {\r\n            errors.limit && (\r\n             <p className=\"help danger\">{errors.limit}</p>\r\n            )\r\n        }\r\n      </div>\r\n      <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n    </div>\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}