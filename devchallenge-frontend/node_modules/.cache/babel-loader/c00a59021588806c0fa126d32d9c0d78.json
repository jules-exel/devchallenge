{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jules\\\\devchallenge\\\\devchallenge-frontend\\\\src\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport validate from './Validation';\nimport useForm from './useForm';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const {\n    values,\n    errors,\n    handleChange,\n    handleSubmit,\n    responseData\n  } = useForm(calculate, validate);\n\n  function calculate() {}\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    noValidate: true,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"label\",\n      for: \"limit\",\n      children: \"Enter a numerical value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        autoComplete: \"off\",\n        className: `input ${errors.limit && 'danger'}`,\n        \"aria-invalid\": errors.limit ? \"true\" : \"false\",\n        name: \"limit\",\n        onChange: handleChange,\n        value: values.limit || ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), errors.limit && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"help danger\",\n        children: errors.limit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      value: \"Submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: responseData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Form, \"4VR25VK88dG3DLmAMrV53QrRrEY=\", false, function () {\n  return [useForm];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/jules/devchallenge/devchallenge-frontend/src/Form.js"],"names":["React","validate","useForm","Form","values","errors","handleChange","handleSubmit","responseData","calculate","limit"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,WAAP;;;AAGA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,YAJI;AAKJC,IAAAA;AALI,MAMFN,OAAO,CAACO,SAAD,EAAYR,QAAZ,CANX;;AAQA,WAASQ,SAAT,GAAoB,CACnB;;AAED,sBACA;AAAM,IAAA,QAAQ,EAAEF,YAAhB;AAA8B,IAAA,UAAU,MAAxC;AAAA,4BACI;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAyB,MAAA,GAAG,EAAC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AACE,QAAA,YAAY,EAAC,KADf;AACqB,QAAA,SAAS,EAAG,SAAQF,MAAM,CAACK,KAAP,IAAgB,QAAS,EADlE;AAEE,wBAAcL,MAAM,CAACK,KAAP,GAAe,MAAf,GAAwB,OAFxC;AAGE,QAAA,IAAI,EAAC,OAHP;AAGe,QAAA,QAAQ,EAAEJ,YAHzB;AAGuC,QAAA,KAAK,EAAEF,MAAM,CAACM,KAAP,IAAgB;AAH9D;AAAA;AAAA;AAAA;AAAA,cADF,EAKGL,MAAM,CAACK,KAAP,iBACC;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA,kBAA4BL,MAAM,CAACK;AAAnC;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAWI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,iBAAhC;AAAkD,MAAA,KAAK,EAAC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ,eAYI;AAAA,gBAAMF;AAAN;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAgBD,CA5BD;;GAAML,I;UAOAD,O;;;KAPAC,I;AA+BN,eAAeA,IAAf","sourcesContent":["import React from 'react';\r\nimport validate from './Validation'; \r\nimport useForm from './useForm';\r\nimport './App.css'; \r\n\r\n\r\nconst Form = () => {\r\n  const { \r\n    values,\r\n    errors,\r\n    handleChange,\r\n    handleSubmit,\r\n    responseData\r\n  } = useForm(calculate, validate);\r\n\r\n  function calculate(){  \r\n  }\r\n\r\n  return (\r\n  <form onSubmit={handleSubmit} noValidate> \r\n      <label className=\"label\" for='limit'>Enter a numerical value</label>\r\n      <div className=\"control\">\r\n        <input\r\n          autoComplete=\"off\" className={`input ${errors.limit && 'danger'}`}\r\n          aria-invalid={errors.limit ? \"true\" : \"false\"}\r\n          name=\"limit\" onChange={handleChange} value={values.limit || ''} />\r\n        {errors.limit && (\r\n          <p className=\"help danger\">{errors.limit}</p>\r\n        )}\r\n      </div>\r\n      <button type=\"submit\" className=\"btn btn-primary\" value=\"Submit\">Submit</button>\r\n      <div>{responseData}</div> \r\n  </form>\r\n  )\r\n}\r\n\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}