{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jules\\\\devchallenge\\\\devchallenge-frontend\\\\src\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport validate from './Validation';\nimport useForm from './useForm';\nimport './App.css';\nimport { response } from 'express';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const {\n    values,\n    errors,\n    handleChange,\n    handleSubmit,\n    handle\n  } = useForm(getMedianLimit, validate);\n\n  function getMedianLimit() {}\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      noValidate: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Enter a numerical value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            autoComplete: \"off\",\n            className: `input ${errors.limit && 'is-danger'}`,\n            \"aria-invalid\": errors.limit ? \"true\" : \"false\",\n            name: \"limit\",\n            onChange: handleChange,\n            value: values.limit || '',\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 19\n          }, this), errors.limit && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"help danger\",\n            children: errors.limit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          value: \"Submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: {\n        isSuccess\n      } && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"help danger\",\n        children: errors.limit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Form, \"U5Oi+lv4a3gA75uoBAqSM1HfwkI=\", false, function () {\n  return [useForm];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/jules/devchallenge/devchallenge-frontend/src/Form.js"],"names":["React","validate","useForm","response","Form","values","errors","handleChange","handleSubmit","handle","getMedianLimit","limit","isSuccess"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,WAAP;AACA,SAASC,QAAT,QAAyB,SAAzB;;;;AAGA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,YAJI;AAKJC,IAAAA;AALI,MAMFP,OAAO,CAACQ,cAAD,EAAiBT,QAAjB,CANX;;AASA,WAASS,cAAT,GAA0B,CAEzB;;AAED,sBACE;AAAA,4BAAE;AAAM,MAAA,QAAQ,EAAEF,YAAhB;AAA8B,MAAA,UAAU,MAAxC;AAAA,6BACI;AAAK,QAAA,EAAE,EAAC,MAAR;AAAA,gCACI;AAAO,UAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACI;AACI,YAAA,YAAY,EAAC,KADjB;AACuB,YAAA,SAAS,EAAG,SAAQF,MAAM,CAACK,KAAP,IAAgB,WAAY,EADvE;AAEI,4BAAcL,MAAM,CAACK,KAAP,GAAe,MAAf,GAAwB,OAF1C;AAGI,YAAA,IAAI,EAAC,OAHT;AAGiB,YAAA,QAAQ,EAAEJ,YAH3B;AAGyC,YAAA,KAAK,EAAEF,MAAM,CAACM,KAAP,IAAgB,EAHhE;AAGoE,YAAA,QAAQ;AAH5E;AAAA;AAAA;AAAA;AAAA,kBADJ,EAKKL,MAAM,CAACK,KAAP,iBACG;AAAG,YAAA,SAAS,EAAC,aAAb;AAAA,sBAA4BL,MAAM,CAACK;AAAnC;AAAA;AAAA;AAAA;AAAA,kBANR;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAWI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,iBAAhC;AAAkD,UAAA,KAAK,EAAC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAAF,eAcS;AAAA,gBACG;AAACC,QAAAA;AAAD,wBACE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA,kBAA4BN,MAAM,CAACK;AAAnC;AAAA;AAAA;AAAA;AAAA;AAFL;AAAA;AAAA;AAAA;AAAA,YAdT;AAAA,kBADF;AAqBD,CAnCD;;GAAMP,I;UAOAF,O;;;KAPAE,I;AAsCN,eAAeA,IAAf","sourcesContent":["import React from 'react';\r\nimport validate from './Validation'; \r\nimport useForm from './useForm';\r\nimport './App.css';\r\nimport { response } from 'express';\r\n\r\n\r\nconst Form = () => {\r\n  const {\r\n    values,\r\n    errors,\r\n    handleChange,\r\n    handleSubmit,\r\n    handle\r\n  } = useForm(getMedianLimit, validate);\r\n\r\n\r\n  function getMedianLimit() { \r\n     \r\n  }\r\n\r\n  return (\r\n    <><form onSubmit={handleSubmit} noValidate>\r\n          <div id=\"main\">\r\n              <label className=\"label\">Enter a numerical value</label>\r\n              <div className=\"control\">\r\n                  <input\r\n                      autoComplete=\"off\" className={`input ${errors.limit && 'is-danger'}`}\r\n                      aria-invalid={errors.limit ? \"true\" : \"false\"}\r\n                      name=\"limit\" onChange={handleChange} value={values.limit || ''} required />\r\n                  {errors.limit && (\r\n                      <p className=\"help danger\">{errors.limit}</p>\r\n                  )}\r\n              </div>\r\n              <button type=\"submit\" className=\"btn btn-primary\" value=\"Submit\">Submit</button>\r\n          </div>\r\n      </form><div>\r\n              { {isSuccess} && (\r\n                  <p className=\"help danger\">{errors.limit}</p>\r\n              )}\r\n          </div></>\r\n  )\r\n}\r\n\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}