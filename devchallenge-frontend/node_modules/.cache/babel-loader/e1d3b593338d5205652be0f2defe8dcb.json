{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport cors from 'cors';\n\nconst useForm = (callback, validate) => {\n  _s();\n\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const baseUrl = \"http://localhost:8080/\";\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [callback, errors, isSubmitting, values]);\n\n  const handleSubmit = event => {\n    if (event) event.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n    const data = {\n      limit: values.limit\n    };\n    axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n    axios.put(baseUrl, data).then(result => {\n      setIsSubmitting(false);\n    }).catch(error => setIsSubmitting(false));\n  };\n\n  const handleChange = event => {\n    event.persist();\n    setValues(values => ({ ...values,\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors\n  };\n};\n\n_s(useForm, \"fN8x5Yp0b2dZEBXkEth9Ky/Ylmk=\");\n\nexport default useForm;","map":{"version":3,"sources":["C:/Users/jules/devchallenge/devchallenge-frontend/src/useForm.js"],"names":["useState","useEffect","axios","cors","useForm","callback","validate","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","baseUrl","Object","keys","length","handleSubmit","event","preventDefault","data","limit","defaults","headers","post","put","then","result","catch","error","handleChange","persist","target","name","value"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAEA,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAAA;;AAEpC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAMa,OAAO,GAAG,wBAAhB;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,MAAM,CAACC,IAAP,CAAYN,MAAZ,EAAoBO,MAApB,KAA+B,CAA/B,IAAoCL,YAAxC,EAAsD;AACjDN,MAAAA,QAAQ;AACZ;AACF,GAJQ,EAIN,CAACA,QAAD,EAAWI,MAAX,EAAmBE,YAAnB,EAAiCJ,MAAjC,CAJM,CAAT;;AAMA,QAAMU,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAIA,KAAJ,EAAWA,KAAK,CAACC,cAAN;AACXT,IAAAA,SAAS,CAACJ,QAAQ,CAACC,MAAD,CAAT,CAAT;AACAK,IAAAA,eAAe,CAAC,IAAD,CAAf;AACA,UAAMQ,IAAI,GAAG;AAAEC,MAAAA,KAAK,EAAEd,MAAM,CAACc;AAAhB,KAAb;AACAnB,IAAAA,KAAK,CAACoB,QAAN,CAAeC,OAAf,CAAuBC,IAAvB,CAA4B,cAA5B,IAA6C,mCAA7C;AAEAtB,IAAAA,KAAK,CAACuB,GAAN,CAAUZ,OAAV,EAAmBO,IAAnB,EACGM,IADH,CACSC,MAAD,IAAY;AAChBf,MAAAA,eAAe,CAAC,KAAD,CAAf;AAED,KAJH,EAIKgB,KAJL,CAIYC,KAAD,IAAWjB,eAAe,CAAC,KAAD,CAJrC;AAKD,GAZD;;AAcA,QAAMkB,YAAY,GAAIZ,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACa,OAAN;AACAvB,IAAAA,SAAS,CAACD,MAAM,KAAK,EAAE,GAAGA,MAAL;AAAa,OAACW,KAAK,CAACc,MAAN,CAAaC,IAAd,GAAqBf,KAAK,CAACc,MAAN,CAAaE;AAA/C,KAAL,CAAP,CAAT;AACD,GAHD;;AAKA,SAAO;AACLJ,IAAAA,YADK;AAELb,IAAAA,YAFK;AAGLV,IAAAA,MAHK;AAILE,IAAAA;AAJK,GAAP;AAMD,CAtCH;;GAAML,O;;AAwCJ,eAAeA,OAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport cors from 'cors';\r\n \r\nconst useForm = (callback, validate) => {\r\n\r\n    const [values, setValues] = useState({});\r\n    const [errors, setErrors] = useState({});\r\n    const [isSubmitting, setIsSubmitting] = useState(false);  \r\n    const baseUrl = \"http://localhost:8080/\";\r\n\r\n    useEffect(() => {\r\n      if (Object.keys(errors).length === 0 && isSubmitting) { \r\n           callback()\r\n      }\r\n    }, [callback, errors, isSubmitting, values]);\r\n  \r\n    const handleSubmit = (event) => {\r\n      if (event) event.preventDefault();\r\n      setErrors(validate(values));\r\n      setIsSubmitting(true);\r\n      const data = { limit: values.limit };\r\n      axios.defaults.headers.post['Content-Type'] ='application/x-www-form-urlencoded';\r\n\r\n      axios.put(baseUrl, data)\r\n        .then((result) => {\r\n          setIsSubmitting(false); \r\n\r\n        }).catch((error) => setIsSubmitting(false));\r\n    };\r\n  \r\n    const handleChange = (event) => {\r\n      event.persist();\r\n      setValues(values => ({ ...values, [event.target.name]: event.target.value }));\r\n    };\r\n  \r\n    return {\r\n      handleChange,\r\n      handleSubmit,\r\n      values,\r\n      errors,\r\n    }\r\n  };\r\n  \r\n  export default useForm;"]},"metadata":{},"sourceType":"module"}