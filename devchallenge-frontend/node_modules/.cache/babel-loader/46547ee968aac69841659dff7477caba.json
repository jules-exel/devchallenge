{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst useForm = (callback, validate) => {\n  _s();\n\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [response, setResponse] = useState;\n  const baseUrl = \"http://localhost:8080/\";\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [callback, errors, isSubmitting, values]);\n\n  const handleSubmit = event => {\n    if (event) event.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n    const data = {\n      limit: values.limit\n    };\n    axios.get(baseUrl, data).then(result => {\n      setIsSubmitting(false);\n      console.log(result);\n    }).catch(error => {\n      setIsSubmitting(false);\n      console.log(error);\n    });\n  };\n\n  const handleChange = event => {\n    event.persist();\n    setValues(values => ({ ...values,\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors\n  };\n};\n\n_s(useForm, \"fN8x5Yp0b2dZEBXkEth9Ky/Ylmk=\");\n\nexport default useForm;","map":{"version":3,"sources":["C:/Users/jules/devchallenge/devchallenge-frontend/src/useForm.js"],"names":["useState","useEffect","axios","useForm","callback","validate","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","response","setResponse","baseUrl","Object","keys","length","handleSubmit","event","preventDefault","data","limit","get","then","result","console","log","catch","error","handleChange","persist","target","name","value"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAAA;;AAEpC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAhC;AACA,QAAMc,OAAO,GAAG,wBAAhB;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,MAAM,CAACC,IAAP,CAAYR,MAAZ,EAAoBS,MAApB,KAA+B,CAA/B,IAAoCP,YAAxC,EAAsD;AACjDN,MAAAA,QAAQ;AACZ;AACF,GAJQ,EAIN,CAACA,QAAD,EAAWI,MAAX,EAAmBE,YAAnB,EAAiCJ,MAAjC,CAJM,CAAT;;AAMA,QAAMY,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAIA,KAAJ,EAAWA,KAAK,CAACC,cAAN;AACXX,IAAAA,SAAS,CAACJ,QAAQ,CAACC,MAAD,CAAT,CAAT;AACAK,IAAAA,eAAe,CAAC,IAAD,CAAf;AACA,UAAMU,IAAI,GAAG;AAAEC,MAAAA,KAAK,EAAEhB,MAAM,CAACgB;AAAhB,KAAb;AAEApB,IAAAA,KAAK,CAACqB,GAAN,CAAUT,OAAV,EAAmBO,IAAnB,EACGG,IADH,CACSC,MAAD,IAAY;AAChBd,MAAAA,eAAe,CAAC,KAAD,CAAf;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,KAJH,EAIKG,KAJL,CAIYC,KAAD,IAAW;AAClBlB,MAAAA,eAAe,CAAC,KAAD,CAAf;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,KAPH;AAQD,GAdD;;AAgBA,QAAMC,YAAY,GAAIX,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACY,OAAN;AACAxB,IAAAA,SAAS,CAACD,MAAM,KAAK,EAAE,GAAGA,MAAL;AAAa,OAACa,KAAK,CAACa,MAAN,CAAaC,IAAd,GAAqBd,KAAK,CAACa,MAAN,CAAaE;AAA/C,KAAL,CAAP,CAAT;AACD,GAHD;;AAKA,SAAO;AACLJ,IAAAA,YADK;AAELZ,IAAAA,YAFK;AAGLZ,IAAAA,MAHK;AAILE,IAAAA;AAJK,GAAP;AAMD,CAzCH;;GAAML,O;;AA2CJ,eAAeA,OAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios'; \r\n \r\nconst useForm = (callback, validate) => {\r\n\r\n    const [values, setValues] = useState({});\r\n    const [errors, setErrors] = useState({});\r\n    const [isSubmitting, setIsSubmitting] = useState(false);  \r\n    const [response, setResponse] = useState\r\n    const baseUrl = \"http://localhost:8080/\";\r\n\r\n    useEffect(() => {\r\n      if (Object.keys(errors).length === 0 && isSubmitting) { \r\n           callback()\r\n      }\r\n    }, [callback, errors, isSubmitting, values]);\r\n  \r\n    const handleSubmit = (event) => {\r\n      if (event) event.preventDefault();\r\n      setErrors(validate(values));\r\n      setIsSubmitting(true);\r\n      const data = { limit: values.limit }; \r\n\r\n      axios.get(baseUrl, data)\r\n        .then((result) => {\r\n          setIsSubmitting(false)\r\n          console.log(result)\r\n        }).catch((error) => {\r\n          setIsSubmitting(false)\r\n          console.log(error)\r\n        });\r\n    };\r\n  \r\n    const handleChange = (event) => {\r\n      event.persist();\r\n      setValues(values => ({ ...values, [event.target.name]: event.target.value }));\r\n    };\r\n  \r\n    return {\r\n      handleChange,\r\n      handleSubmit,\r\n      values,\r\n      errors,\r\n    }\r\n  };\r\n  \r\n  export default useForm;"]},"metadata":{},"sourceType":"module"}